// ignore_for_file: use_build_context_synchronously

/*
* Autogenerated header by File Header Comment extension - Donna Iwan
* File:       empty_project_body.dart
* Created on: Mon Mar 13 2023
* Author:     Tong Vu Than Dan
*
* Copyright (c) 2023 ${Dantopia}
* Website:     dantopia.vn
*
* Description: This file is shown when there is not any project in database
 */
import 'package:adaptive_dialog/adaptive_dialog.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:go_router/go_router.dart';
import 'package:innovation_hub/app/project/model/project_model.dart';
import 'package:innovation_hub/app/project/provider/project_provider.dart';
import 'package:innovation_hub/utils/padding.dart';
import 'package:innovation_hub/utils/space.dart';
import 'package:lottie/lottie.dart';

import '../../app_routing.dart';

class DashboardPageBody extends ConsumerWidget {
  const DashboardPageBody({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return LayoutBuilder(
      builder: (context, constraints) {
        return Container(
          padding: const EdgeInsets.only(left: 4 * defaultPadding, right: 2 * defaultPadding, top: 4 * defaultPadding),
          color: Theme.of(context).scaffoldBackgroundColor,
          height: MediaQuery.of(context).size.height,
          child: SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const SizedBox(
                  height: 48,
                ),
                Text(
                  'Welcome back innovator,',
                  style: Theme.of(context).textTheme.headlineMedium,
                ),
                Text(
                  'time to innovate!',
                  style: Theme.of(context).textTheme.titleMedium!.copyWith(
                        fontStyle: FontStyle.italic,
                      ),
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    SizedBox(
                      width: constraints.maxWidth * 0.6,
                      height: constraints.maxHeight * 0.5,
                      child: Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: Lottie.asset(
                          'assets/animations/118991-idea-innovation.json',
                          fit: BoxFit.contain,
                        ),
                        // child: Image.asset(
                        //   'assets/images/time-to-innovate.png',
                        //   fit: BoxFit.contain,
                        // ),
                      ),
                    ),
                  ],
                ),
                Space.y(20),
                SizedBox(
                  width: double.infinity,
                  child: Wrap(
                    runSpacing: 24,
                    spacing: 32,
                    alignment: WrapAlignment.center,
                    runAlignment: WrapAlignment.center,
                    children: [
                      ElevatedButton.icon(
                        onPressed: () async {
                          final _ = await _showEnterProjectNameDialog(context, ref);
                        },
                        icon: const Icon(Icons.add),
                        label: const Text('New project'),
                        style: ElevatedButton.styleFrom(
                          minimumSize: const Size(128, 64),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );
  }

  Future<String?> _showEnterProjectNameDialog(BuildContext context, WidgetRef ref) async {
    final results = await showTextInputDialog(
      context: context,
      title: 'Enter project name',
      message: 'Please enter project name to continue',
      textFields: [
        DialogTextField(
          initialText: 'ProjectA',
          hintText: 'Input your project name',
          validator: (value) => value!.isEmpty ? 'Input more than one character' : null,
        ),
      ],
      okLabel: 'Continue',
      cancelLabel: 'Cancel',
    );
    if (results != null && results.isNotEmpty) {
      debugPrint('Results: ${results[0]}');
      //NOTE - Create project if the project name is not empty
      final project = Project();
      project.name = results.first;
      project.id = UniqueKey().toString().replaceAll('#', '').replaceAll('[', '').replaceAll(']', '');
      //Save project
      ref.read(projectsProvider).add(project);
      context.goNamed(
        AppRoute.addProject.name,
        extra: project,
      );
      return results.first;
    } else {
      return null;
    }
  }
}
